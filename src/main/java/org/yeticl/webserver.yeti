/*
 * Copyright 2011 Christian Essl
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 */

module org.yeticl.webserver;

import java.net: ServerSocket, Socket, HttpRetryException,SocketException;

//listenPort
newServer port socketHandler = (
    httpd = new ServerSocket(port);
    x = runThread [Daemon ()] do ():
        try
        (true) loop (
            socket = httpd#accept();
            x = runThread [] do ():
                try
                    out = socket#getOutputStream();
                    inp = socket#getInputStream();
                    socketHandler out inp;
                    out#flush();
                finally
                    socket#close();
                yrt;
            done;
            ();
        );
        catch SocketException ex:
        yrt;
    done;

    stop () = (
        httpd#close();
        "server stopped";
    );
    stop
);

socketHandler requestHandler outputStream inputStream  = (
    out = outputHandle outputStream "";
    input = inputHandle inputStream "";
    replyHeader status contentType =
        out.write "HTTP/1.0 \(status)\r\nContent-Type: \(contentType)\r\n\r\n";
    try
        status = strSplit '\s+' (input.readln ());
        req = if length status == 1 then
                {method = "GET", path = status.[0], input}
              elif (length status == 3) and (status.[2] =~ '^HTTP/1.') then
                {method = strUpper status.[0], path = status.[1], input}
              else
                throw new HttpRetryException("Bad Request",400);
              fi;

        if not (req.method == "GET" or req.method == "HEAD") then
            throw new HttpRetryException("Only supports GET and HEAD requests",405);
        fi;

        requestHandler req out replyHeader;
        out.flush();
        ();

    catch HttpRetryException ex:
        replyHeader ex#getReason() "text/html";
        out.writeln "<h1>\(ex#getReason())</h1>";
    catch Exception ex:
        replyHeader "500 Internal Server Error" "text/html";
        out.writeln "<h1>\(ex)</h1>";
        println ex;
    yrt    
);

testHandler req out hd = (hd "200 OK" "text/html";out.write "<h1>Server is running</h2>");

{
    httpServer port requestHandler = newServer port (socketHandler requestHandler),
    testServer port = httpServer port testHandler
}

